.PHONY: help setup dev run test lint format clean db-setup db-migrate db-reset fake-data

# Default target
help:
	@echo "Available commands:"
	@echo "  make setup        Setup local development environment"
	@echo "  make dev          Start development server with Docker"
	@echo "  make run          Run Flask application locally"
	@echo "  make test         Run tests"
	@echo "  make lint         Run linters (flake8, mypy)"
	@echo "  make format       Format code with black and isort"
	@echo "  make clean        Remove build artifacts and cache directories"
	@echo "  make db-setup     Initialize Supabase database"
	@echo "  make db-migrate   Run database migrations"
	@echo "  make db-reset     Reset database (warning: destroys all data)"
	@echo "  make fake-data    Generate fake data for development"

# Setup development environment
setup:
	@echo "Setting up development environment..."
	chmod +x ./setup-local.sh
	./setup-local.sh

# Start development environment with Docker
dev:
	@echo "Starting development environment..."
	docker-compose up

# Run Flask locally
run:
	@echo "Running Flask application..."
	flask run

# Run tests
test:
	@echo "Running tests..."
	pytest

# Run linters
lint:
	@echo "Running linters..."
	flake8 app tests
	mypy app tests

# Format code
format:
	@echo "Formatting code..."
	isort app tests
	black app tests

# Clean build artifacts
clean:
	@echo "Cleaning up..."
	rm -rf .pytest_cache
	rm -rf __pycache__
	rm -rf app/__pycache__
	rm -rf app/**/__pycache__
	rm -rf .coverage
	rm -rf htmlcov
	rm -rf .mypy_cache

# Setup database tables and extensions
db-setup:
	@echo "Setting up database tables..."
	python -c "from app.models import db; db.setup_database()"

# Run database migrations
db-migrate:
	@echo "Running database migrations..."
	python -c "from app.models import db; db.run_migrations()"

# Reset database (deletes all data)
db-reset:
	@echo "WARNING: This will delete all data in the database!"
	@read -p "Are you sure you want to continue? (y/n) " confirm; \
	if [ "$confirm" = "y" ]; then \
		echo "Resetting database..."; \
		python -c "from app.models import db; db.reset_database()"; \
	else \
		echo "Database reset cancelled."; \
	fi

# Generate fake data for development
fake-data:
	@echo "Generating fake data..."
	python -c "from app.utils.fake_data import generate_fake_data; generate_fake_data()"