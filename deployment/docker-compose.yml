version: '3.8'

services:
  traefik:
    image: traefik:v2.9
    container_name: plumberleads-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Expose dashboard port for development
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
      - ./traefik/acme.json:/acme.json
      - ./logs/traefik:/var/log/traefik
    networks:
      - plumberleads_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=PathPrefix(`/dashboard`) || PathPrefix(`/api`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$talBPKvT$$1oJK1OyTVzlJva5T/XrpO/"  # admin:password

  web:
    image: ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_TAG:-latest}
    container_name: plumberleads-web
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/plumberleads
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - LOG_LEVEL=DEBUG
    depends_on:
      - postgres
    volumes:
      - ./logs/web:/app/logs
    networks:
      - plumberleads_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.services.web.loadbalancer.server.port=5000"

  postgres:
    image: postgis/postgis:14-3.3
    container_name: plumberleads-postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=plumberleads
    networks:
      - plumberleads_network

networks:
  plumberleads_network:
    name: plumberleads_network

volumes:
  postgres_data: 